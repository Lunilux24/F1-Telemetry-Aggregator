Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-bucket-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  BucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt Bucket.Arn
              - !Sub ${Bucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'

  Group:
    Type: AWS::IAM::Group
    Properties:
      GroupName: jenkins-admin
  GroupPolicy:
    Type: AWS::IAM::GroupPolicy
    Properties:
      GroupName: !Ref Group
      PolicyName: IAMGroupECRPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - ecr:*
            Resource: '*'
  GroupPolicy2:
    Type: AWS::IAM::GroupPolicy
    Properties:
      GroupName: !Ref Group
      PolicyName: IAMGroupS3Policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:*
            Resource: '*'
  GroupPolicy3:
    Type: AWS::IAM::GroupPolicy
    Properties:
      GroupName: !Ref Group
      PolicyName: IAMGroupCFNPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:*
            Resource: '*'

Metadata:
  AWS::Composer::ExternalResources:
    ExternalRDS:
      Type: externalRDS
      Settings:
        Port: !Ref ExternalRDSPort
        Hostname: !Ref ExternalRDSHostname
        SecretArn: !Ref ExternalRDSSecretArn
  AWS::Composer::Groups:
    Group3:
      Label: Group3
      Members:
        - GroupPolicy3
        - GroupPolicy2
        - GroupPolicy
Parameters:
  ExternalRDSPort:
    Type: Number
  ExternalRDSHostname:
    Type: String
  ExternalRDSSecretArn:
    Type: String
